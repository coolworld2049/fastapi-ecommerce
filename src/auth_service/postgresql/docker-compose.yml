version: '3.9'

services:

  auth_service_postgresql_master:
    image: bitnami/postgresql:latest
    user: root
    container_name: auth_service_postgresql_master
    env_file:
      - ../.env
      - ../.env.prod
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=on
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      - POSTGRESQL_TCP_KEEPALIVES_INTERVAL=0
      - POSTGRESQL_TCP_KEEPALIVES_IDLE=0
      - POSTGRESQL_TCP_KEEPALIVES_COUNT=10
    volumes:
      - ./conf:/bitnami/postgresql/custom_conf:ro
      - ./scripts:/docker-entrypoint-preinitdb.d:ro
      - auth_service_postgresql_master_data:/bitnami/postgresql

  auth_service_pgbouncer_master:
    image: bitnami/pgbouncer:latest
    container_name: auth_service_pgbouncer_master
    ports:
      - "6432:6432"
    env_file:
      - ../.env
      - ../.env.prod
    environment:
      - POSTGRESQL_HOST=auth_service_postgresql_master
      - PGBOUNCER_POOL_MODE=session
    restart: always

  auth_service_postgresql_replica_01:
    image: bitnami/postgresql:latest
    user: root
    container_name: auth_service_postgresql_replica_01
    env_file:
      - ../.env
      - ../.env.prod
    ports:
      - "5434:5432"
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=auth_service_postgresql_master
      - POSTGRESQL_TCP_KEEPALIVES_INTERVAL=0
      - POSTGRESQL_TCP_KEEPALIVES_IDLE=0
      - POSTGRESQL_TCP_KEEPALIVES_COUNT=10
    volumes:
      - ./conf:/bitnami/postgresql/custom_conf:ro
      - ./scripts:/docker-entrypoint-preinitdb.d:ro
      - auth_service_postgresql_replica_01_data:/bitnami/postgresql
    restart: always
  auth_service_pgbouncer_replica_01:
    image: bitnami/pgbouncer:latest
    user: root
    container_name: auth_service_pgbouncer_replica_01
    ports:
      - "6434:6432"
    env_file:
      - ../.env
      - ../.env.prod
    environment:
      - POSTGRESQL_HOST=auth_service_postgresql_replica_01
      - PGBOUNCER_POOL_MODE=session
    volumes:
      - auth_service_pgbouncer_replica_01:/bitnami/pgbouncer/conf
    restart: always

  auth_service_postgresql_replica_02:
    image: bitnami/postgresql:latest
    container_name: auth_service_postgresql_replica_02
    env_file:
      - ../.env
      - ../.env.prod
    ports:
      - "5435:5432"
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=auth_service_postgresql_master
      - POSTGRESQL_TCP_KEEPALIVES_INTERVAL=0
      - POSTGRESQL_TCP_KEEPALIVES_IDLE=0
      - POSTGRESQL_TCP_KEEPALIVES_COUNT=10
    volumes:
      - ./conf:/bitnami/postgresql/custom_conf:ro
      - ./scripts:/docker-entrypoint-preinitdb.d:ro
      - auth_service_postgresql_replica_02_data:/bitnami/postgresql
    restart: always
  auth_service_pgbouncer_replica_02:
    image: bitnami/pgbouncer:latest
    container_name: auth_service_pgbouncer_replica_02
    ports:
      - "6435:6432"
    env_file:
      - ../.env
      - ../.env.prod
    environment:
      - POSTGRESQL_HOST=auth_service_postgresql_replica_02
      - PGBOUNCER_POOL_MODE=session
    volumes:
      - auth_service_pgbouncer_replica_02:/bitnami/pgbouncer/conf
    restart: always

volumes:
  auth_service_postgresql_master_data:
    labels:
      keep:
  auth_service_pgbouncer_master:
    labels:
      keep:

  auth_service_postgresql_replica_01_data:
    labels:
      keep:
  auth_service_pgbouncer_replica_01:
    labels:
      keep:

  auth_service_postgresql_replica_02_data:
    labels:
      keep:
  auth_service_pgbouncer_replica_02:
    labels:
      keep: