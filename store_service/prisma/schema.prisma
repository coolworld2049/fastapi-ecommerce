generator db {
  provider             = "prisma-client-py"
  interface            = asyncio
  recursive_type_depth = 5
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

enum CartStatus {
  active
  inactive
}

enum OrderStatus {
  pending
  awaiting_payment
  awaiting_fulfilment
  completed
  canceled
  declined
  refunded
  disputed
  partially_refunded
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  username     String    @unique
  role         String    @default("guest")
  password     String?
  full_name    String?
  is_active    Boolean?  @default(true)
  is_superuser Boolean?  @default(false)
  created_at   DateTime? @default(now())
  updated_at   DateTime? @updatedAt
  orders       Order[]
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String?
  products    Product[]
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String?   @unique
  price       Float?
  description String?
  category    Category? @relation(fields: [category_id], references: [id])
  category_id String    @db.ObjectId
  orders      Order[]   @relation(fields: [order_ids], references: [id])
  order_ids   String[]  @db.ObjectId
}

model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  user        User?       @relation(fields: [user_id], references: [id])
  user_id     String      @db.ObjectId
  products    Product[]   @relation(fields: [product_ids], references: [id])
  product_ids String[]    @db.ObjectId
  status      OrderStatus @default(pending)
  cost        Float?
  tax         Float?
  total       Float?
  currency    String?
  created_at  DateTime?   @default(now())
  updated_at  DateTime?   @updatedAt
}
