#file: noinspection YAMLSchemaValidation
name: Deploy
on:
  pull_request:
    branches:
      - master
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build images and publish to registry
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          echo "${{ secrets.AUTH_SERVICE_ENV_FILE }}" > src/.env.auth_service
          echo "${{ secrets.STORE_SERVICE_ENV_FILE }}" > src/.env.store_service
          sed -i~ '/^APP_ENV=/s/=.*/=test/' .env
          chmod +x hack/*
          cd hack
          bash cpenv.sh
          ls -I venv -I  __pycache__ -I __init__.py -R ..
          bash make_docker_images.sh
          bash start.sh
          cd ..
  build:
    name: Production Deployment
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: scp-action
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "."
          target: "/root/fastapi_ecommerce/"

      - name: start.sh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /root/fastapi_ecommerce/
            echo "${{ secrets.ENV_FILE }}" > .env
            echo "${{ secrets.AUTH_SERVICE_ENV_FILE }}" > src/.env.auth_service
            echo "${{ secrets.STORE_SERVICE_ENV_FILE }}" > src/.env.store_service
            chmod +x hack/*
            cd hack
            bash cpenv.sh
            ls -I venv -I  __pycache__ -I __init__.py -R ..
            bash make_docker_images.sh
            bash restart.sh
